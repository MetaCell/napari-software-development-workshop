[metadata]
name = napari-workshop-plugin

description = A plugin to demonstrate some concepts from the 2023 workshop on software development related to napari
long_description = file: README.md
long_description_content_type = text/markdown

author = MetaCell
author_email = sean.martin@metacell.us
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 2 - Pre-Alpha
    Framework :: napari
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Image Processing
project_urls =
    Bug Tracker = https://github.com/seankmartin/napari-software-development-workshop/issues
    Documentation = https://seankmartin.github.io/napari-software-development-workshop/
    Source Code = https://github.com/seankmartin/napari-software-development-workshop
    User Support = https://napari.zulipchat.com

[options]
packages = find:
install_requires =
    numpy>=1.23,<2
    magicgui
    qtpy
    # Here, we don't need them, but you can set environment markers to
    # install additional dependencies for specific platforms, Python
    # versions, or environments.  For example, this will install
    # specific `magicgui` and `qtpy` versions only on Python 3.10,
    # and only if we are not on a Mac:
    # magicgui==0.7.3 ; python_version >= "3.10"
    # magicgui==0.7.2 ; python_version < "3.10"
    # qtpy==2.3.1 ; sys_platform != "darwin"
    # qtpy>=2.3.0 ; sys_platform == "darwin"

python_requires = >=3.8
include_package_data = True
package_dir =
    =src
setup_requires = setuptools_scm
# add your package requirements here

[options.extras_require]
testing =
    tox
    pytest
    pytest-cov
    pytest-qt
    napari
    pyqt5

docs = 
    mkdocs-material
    mkdocstrings-python
    mkdocstrings


[options.packages.find]
where = src

[options.entry_points]
napari.manifest =
    napari-workshop-plugin = napari_workshop_plugin:napari.yaml


[options.package_data]
* = *.yaml, *.npy
